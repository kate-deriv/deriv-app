// TODO: Utilize tokens from quill and logical css properties;
.contract-card {
    position: relative;
    display: flex;
    width: 100%;
    cursor: pointer;
    background-color: var(--component-modal-bg);
    padding: var(--semantic-spacing-general-md);
    justify-content: space-between;
    height: 10.4rem;
    transform: translateX(0);
    transition: transform var(--core-motion-duration-200) var(--motion-easing-inandout);

    .icon,
    .dc-icon {
        position: relative;
        display: flex;
        flex-shrink: 0;
        justify-content: center;
        align-items: center;
        width: var(--core-size-1600);
        height: var(--core-size-1600);
        cursor: pointer;
    }
    .body {
        display: flex;
        flex-direction: column;
        gap: var(--semantic-spacing-gap-md);
    }
    .body,
    .title {
        min-width: 0;
        flex-grow: 1;
    }
    .details,
    .status-and-profit,
    .status,
    .timer {
        display: flex;
        gap: var(--core-spacing-400);
        align-items: center;
    }
    .status,
    .timer {
        background-color: var(--core-color-opacity-black-75);
        height: var(--core-size-1200);
        padding: 0 var(--core-spacing-400);
        border-radius: var(--semantic-borderRadius-sm);

        .dc-remaining-time {
            font-size: unset;
        }
    }
    .status-and-profit {
        justify-content: space-between;
    }
    .title {
        display: flex;
        flex-direction: column;
    }
    .trade-type,
    .symbol {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        &__icon {
            padding: var(--core-size-200);
        }
    }
    .symbol,
    .stake {
        color: var(--component-textIcon-normal-subtle);
    }
    .stake {
        align-self: flex-end;
    }
    .buttons {
        display: flex;
        align-self: center;
        justify-content: flex-end;
        flex-shrink: 0;
        width: fit-content;
        height: 100%;
        position: absolute;
        inset-block-start: 0;
        inset-inline-end: 0;
        inset-block-end: 0;
        transform: translateX(100%);

        button {
            width: var(--core-size-3600);
            height: 100%;

            div {
                color: var(--core-color-solid-slate-50);
            }
            &:disabled:not(.loading) {
                background-color: var(--core-color-opacity-black-200);

                div {
                    color: var(--component-textIcon-normal-disabled);
                }
            }
            .circle-loader {
                width: var(--core-size-600);
                height: var(--core-size-600);
                display: grid;
                border-radius: 50%;
                mask: radial-gradient(farthest-side, #0000 50%, var(--core-color-solid-slate-1400) 51%);
                background: linear-gradient(0deg, rgba(255, 255, 255, 0.5) 50%, var(--core-color-solid-slate-50) 0)
                        center/1px 100%,
                    linear-gradient(90deg, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.75) 0) center/100% 1px;
                background-repeat: no-repeat;
                animation: rotate-loader 1s infinite steps(8);

                &:before,
                &:after {
                    content: '';
                    grid-area: 1/1;
                    border-radius: 50%;
                    background: inherit;
                    opacity: 0.915;
                    transform: rotate(45deg);
                }
                &:after {
                    opacity: 0.83;
                    transform: rotate(90deg);
                }
                @keyframes rotate-loader {
                    100% {
                        transform: rotate(360deg);
                    }
                }
            }
        }
    }
    &.lost {
        .total-profit {
            color: var(--core-color-solid-red-600);
        }
        button:not(:disabled),
        button.loading {
            background-color: var(--core-color-solid-cherry-700);
        }
        .status {
            color: var(--core-color-solid-red-900);
            background-color: var(--core-color-opacity-red-100);
        }
    }
    &.won {
        .total-profit {
            color: var(--core-color-solid-green-600);
        }
        button:not(:disabled),
        button.loading {
            background-color: var(--core-color-solid-emerald-700);
        }
        .status {
            color: var(--core-color-solid-green-900);
            background-color: var(--core-color-opacity-green-100);
        }
    }
    &.show-buttons {
        transform: translateX(calc(var(--core-size-3600) * -1));

        &.has-cancel-button {
            transform: translateX(calc(var(--core-size-3600) * -2));
        }
    }
    &-wrapper {
        position: relative;
        width: inherit;
        overflow: hidden;
        max-height: 10.4rem; // equal to __item's height of 104px, must be an exact value for for item deletion transition to work
        box-shadow: var(--core-elevation-shadow-130);
        border-radius: var(--semantic-borderRadius-md);

        &.deleted {
            opacity: var(--core-opacity-50);
            max-height: 0;
            transition: max-height 0.3s, opacity 0.3s;
            transition-timing-function: var(--motion-easing-out);
        }
    }
    &-list {
        display: flex;
        flex-grow: 1;
        flex-direction: column;
        gap: var(--core-spacing-400);
        width: inherit;
        padding: var(--core-spacing-400);

        &--has-buttons-demo {
            .contract-card-wrapper:first-child {
                .contract-card {
                    animation: var(--motion-duration-relax) var(--motion-easing-inandout) bounce-one-button;

                    &.has-cancel-button {
                        animation: var(--motion-duration-relax) var(--motion-easing-inandout) bounce-two-buttons;
                    }
                    @keyframes bounce-one-button {
                        0%,
                        100% {
                            transform: translateX(0);
                        }
                        30%,
                        70% {
                            transform: translateX(calc(var(--core-size-3600) * -1));
                        }
                    }
                    @keyframes bounce-two-buttons {
                        0%,
                        100% {
                            transform: translateX(0);
                        }
                        30%,
                        70% {
                            transform: translateX(calc(var(--core-size-3600) * -2));
                        }
                    }
                }
            }
        }
    }
}
